@page "/neuesaquarium"
@page "/neuesaquarium/{FutterautomatId:int}"
@page "/neuesaquarium/update/{AquariumId:int}"

@rendermode InteractiveServer

@inject NavigationManager navigationManager
@inject IFutterautomatenEFCoreRepository futterautomatenEFCoreRepository
@using FutterautomatenDatenbank.Models
@using System.Text

<h3>Neues Aquarium</h3>

<div class="form-group">
    <label for="Name">Name</label>
    <input type="text" class="form-control" id="Name" @bind=@Name >
</div>
<div class="form-group">
    <label for="Aufstellort">Aufstellort</label>
    <input type="text" class="form-control" id="Aufstellort" @bind=@Aufstellort>
</div>
<div class="form-group">
    <label for="Groesse">Größe</label>
    <input type="text" class="form-control" id="Groesse" @bind=@Groesseße>
</div>

<br />
<br />
<button type="button" class="btn btn-primary" @onclick="SaveData">Speichern</button>
<br />
<br />
@if (isFehler)
{
    <div class="row">
        <div class="col-12">
            <textarea style="color:red; width:100%; height:300px;">@fehlerLabel</textarea>
        </div>
    </div>
}


@code {
    /// <summary>
    /// Parameter aus der URI
    /// </summary>
    [Parameter]
    public int FutterautomatId { get; set; } = -1;
    /// <summary>
    /// Parameter aus der URI
    /// </summary>
    [Parameter]
    public int AquariumId { get; set; }
    //Wird auf true gesetzt wenn ein Fehler auftritt
    private bool isFehler = false;
    ///Fehlertext
    private string fehlerLabel = string.Empty;
    //Variablen der Anzeige
    private string Name { get; set; } = string.Empty;
    private string Aufstellort { get; set; } = string.Empty;
    private string Groesseße { get; set; } = string.Empty;

    Futterautomat? futterautomat;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            if (AquariumId > 0)
            {
                var aquarium = futterautomatenEFCoreRepository.GetAquarium(AquariumId);
                Name = aquarium.Name;
                Aufstellort = aquarium.Aufstellort;
                Groesseße = aquarium.Groeße;
                StateHasChanged();
            }
        }
    }

    //// <summary>
    /// Speichert eingegebenen Werte
    /// </summary>
    private void SaveData()
    {
        Aquarium aquarium = new()
        {
            Name = this.Name,
            Aufstellort = this.Aufstellort,
            Groeße = this.Groesseße
        };

        if(IsInputWrong(aquarium.Name)) return;

        if (AquariumId > 0)
        {
            aquarium.AquariumId = this.AquariumId;
            aquarium.Name = this.Name;
            aquarium.Aufstellort = this.Aufstellort;
            aquarium.Groeße = this.Groesseße;
            futterautomatenEFCoreRepository.UpdateAquarium(aquarium);
            navigationManager.NavigateTo("/aquariumverwaltung");
            return;
        }

        futterautomatenEFCoreRepository.AddAquarium(aquarium);

        if(FutterautomatId > 0)
        {
            this.futterautomat = futterautomatenEFCoreRepository.GetFutterautomat(FutterautomatId);

            Futterautomat futterautomat = new Futterautomat()
            {
                Aquarium = aquarium,
                Bezeichnung = this.futterautomat.Bezeichnung,
                Fuetterungen = this.futterautomat.Fuetterungen,
                Futter = this.futterautomat.Futter,
                FutterFaktor = this.futterautomat.FutterFaktor,
                Person = this.futterautomat.Person
            };
            futterautomatenEFCoreRepository.UpdateFutterautomat(FutterautomatId, futterautomat);
            navigationManager.NavigateTo($"/neuerfutterautomat/update/{FutterautomatId}");
        }
        else
        {
            navigationManager.NavigateTo($"/aquariumverwaltung");
        }
    }

    /// <summary>
    /// Überprüfung ob alle eingaben in Ordnung
    /// </summary>
    /// <param name="aqauriumName"></param>
    /// <returns></returns>
    private bool IsInputWrong(string aqauriumName)
    {
        bool exists = futterautomatenEFCoreRepository.GetAquarien().Any(a => a.Name == aqauriumName);

        if (aqauriumName.Length < 1)
        {
            fehlerLabel = "Kein Name angegeben!";
            isFehler = true;
            return true;
        }
        else if (exists && AquariumId <= 0)
        {
            var sb = new StringBuilder();
            sb.AppendLine("Name bereits vorhanden!");
            sb.AppendLine("Bereits vergebene Namen:");
            foreach (var aq in futterautomatenEFCoreRepository.GetAquarien())
            {
                sb.AppendLine($"{aq.Name},");
            }
            fehlerLabel = $"{sb.ToString()}";
            isFehler = true;
            return true;
        }
        isFehler = false;
        return false;
    }

}
