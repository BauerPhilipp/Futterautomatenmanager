@page "/neuerfutterautomat"
@page "/neuerfutterautomat/{id:int}"


@rendermode InteractiveServer
@inject IFutterautomatenEFCoreRepository FutterautomatenEFCoreRepository

@using FutterautomatenDatenbank.Context
@using FutterautomatenDatenbank.Models

<h3 class="text-center">@((Id >= 0) ? "Futterautomat anpassen" : "Neuen Futterautomat erstellen")</h3>

<form>
    <div class="form-group">
        <label for="bezeichnung">Bezeichnung</label>
        <input type="text" class="form-control" id="bezeichnung" @bind="Bezeichnung">
    </div>
    <div class="form-group">
        <label for="faktorFuetterungen">Faktor Fütterungen</label>
        <input type="number" class="form-control" id="faktorFuetterungen" @bind="FaktorFuetterungen">
    </div>
    <br />
    <div class="form-group">
        <label for="ControlSelect1">Aquarium</label>
        @if(aquarien is not null && aquarien.Count > 0)
        {
            <select class="form-control" id="ControlSelect1">
                @foreach (var aquarium in aquarien)
                {
                    <option value="@aquarium.Name"></option>
                }
            </select>
        }
        else
        {
            <button type="button" class="btn-primary">Neues Aquarium</button>
        }

    </div>

    <br /><br />
    <button type="button" class="btn-primary">Speichern</button>
</form>

@code {
    [Parameter]
    public int Id { get; set; } = -1;

    public float FaktorFuetterungen { get; set; } = 1;

    public string Bezeichnung { get; set; }

    private List<Aquarium>? aquarien;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            aquarien = FutterautomatenEFCoreRepository.GetAquarien();
            if (Id >= 0)
            {
                var futterautomat = FutterautomatenEFCoreRepository.GetFutterautomat(Id);
                Bezeichnung = futterautomat.Bezeichnung;
                FaktorFuetterungen = futterautomat.FutterFaktor;

                if (futterautomat.Aquarium is not null)
                {
                    aquarien.Remove(futterautomat.Aquarium);
                    aquarien.Insert(0, futterautomat.Aquarium);
                }
            }
            StateHasChanged();
        }
    }

}
