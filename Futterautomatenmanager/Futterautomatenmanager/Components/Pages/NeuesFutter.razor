@page "/neuesfutter"
@page "/neuesfutter/{FutterautomatId:int}"
@page "/neuesfutter/update/{FutterId:int}"

@rendermode InteractiveServer

@using FutterautomatenDatenbank.Models
@inject IFutterautomatenEFCoreRepository FutterautomatenEFCoreRepository
@inject NavigationManager navigationManager

<h3>@(FutterId > 0 ? "Futter Bearbeiten" : "Neues Futter")</h3>

<div class="form-group">
    <label for="Name">Name</label>
    <input type="text" class="form-control" id="Name" @bind=@Name>
</div>
<div class="form-group">
    <label for="Packungsinhalt">Packungsinhalt in mm</label>
    <input type="number" class="form-control" id="Packungsinhalt" @bind=@Packungsinhalt>
</div>
<div class="form-group">
    <label for="Beschreibung">Beschreibung</label>
    <textarea type="text" class="form-control" id="Beschreibung" @bind=@Beschreibung></textarea>
</div>
<br />
<button type="button" class="btn btn-primary" @onclick="Save">Speichern</button> &nbsp;


@code {
    [Parameter]
    public int FutterautomatId { get; set; } = -1;

    [Parameter]
    public int FutterId { get; set; }

    public string Name { get; set; }
    public float Packungsinhalt { get; set; }
    public string Beschreibung { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            Futter futter;
            if (FutterId > 0)
            {
                futter = FutterautomatenEFCoreRepository.GetFutter(FutterId);
                Name = futter.FutterName;
                Packungsinhalt = futter.Packungsinhalt;
                Beschreibung = futter.Beschreibung;
                StateHasChanged();
            }
        }


    }

    private void Save()
    {
        //futter wird aktualisiert
        if (FutterId > 0)
        {
            var futter = FutterautomatenEFCoreRepository.GetFutter(FutterId);
            futter.FutterName = this.Name;
            futter.Packungsinhalt = this.Packungsinhalt;
            futter.Beschreibung = this.Beschreibung;
            FutterautomatenEFCoreRepository.UpdateFutter(futter);
            navigationManager.NavigateTo("/futterverwaltung");
            return;
        }
        //neues Futter
        if (FutterId <= 0)
        {
            var futter = new Futter()
                {
                    FutterName = this.Name ?? "",
                    Packungsinhalt = this.Packungsinhalt,
                    Beschreibung = this.Beschreibung ?? ""
                };
            FutterautomatenEFCoreRepository.AddFutter(futter);
        }
        //Navigation nicht von einem Futterautomaten
        if (FutterautomatId <= 0)
        {
            navigationManager.NavigateTo($"/futterverwaltung");
            return;
        }
        navigationManager.NavigateTo($"/neuerfutterautomat/update/{FutterautomatId}");
    }
    private void Delete()
    {
        FutterautomatenEFCoreRepository.DeleteFutter(FutterId);
    }

}
